Sto cercando di creare un programma in Python che mi permette di fare delle assegnazioni bilanciate di appartamenti da pulire ai miei cleaner.
Dopo aver preso i dati sia degli appartamenti che dei dettagli dei cleaner da un JSON strutturato così:
(VEDI IL FILE JSON MODELLI.txt)
Voglio che mi faccia tutti i calcoli richiesti per avere un JSON di output con tutte le assegnazioni bilanciate.
L'algoritmo dovrà essere suddiviso in diverse sezioni.
Dopo aver preso tutti i dati da JSON di input, si passa alla PRIMA FASE.
La PRIMA FASE voglio che divida gli appartamenti in "pacchetti" di task da fare, questi pacchetti solo in seguito (nella TERZA FASE) diverranno la lista di appartamenti che deve fare nella giornata UN SINGOLO CLEANER.
Perciò, avendo tutti gli appartamenti, il codice deve riordinarli dal JSON con quelli con orario di checkin più presto la mattina del giorno seguente. Una volta riordinati, si inizia considerando il primo appartamento cercando se ci sono altri appartamenti nella lista da fare nel giro di 3 kilometri (usando la funzione di gmaps che ho già creato *vedi codice gmaps.py*) e se sì, verranno scelti se essere messi nello stesso pacchetto di appartamenti se il tempo di pulizia dell'appartamento (cleaning_time) sommato al tempo di spostamento del cleaner tra un apt. e l'altro è INFERIORE a 4 ore. Si creano così dei pacchetti di apt. bilanciati per ogni cleaner e suddivisi nelle stesse zone. Sono circa dai 3 ai 4 appartamenti per giornata (perciò per pacchetto) ma dipende molto da quante ore è il cleaning_time. Bisogna cercare di avere per ogni pacchetto un tempo totale di pulizia equilibrato tra di loro.
Il numero di pacchetti necessari è determinato dal numero di cleaner disponibili, che è già un dato che viene importato all'inizio dell'algoritmo. Inoltre i pacchetti devono essere suddivisi in PREMIUM e STANDARD in base all'appartamento. In un pacchetto per cleaner STANDARD ci vanno SOLO ED ESCLUSIVAMENTE appartamenti di type STANDARD e stessa cosa vale per i pacchetti PREMIUM.
Una volta arrivati con una lista in JSON di pacchetti di appartamenti suddivisi e raggruppati, si passa alla SECONDA FASE.
SECONDA FASE: In questa fase si hanno già dei pacchetti di appartamenti con tempi bilanciati per ogni cleaner, e ciò che deve avvenire in questo pezzo di codice è l'ordinamento in sequenza di pulizia di ogni appartamento. Questo ordinamento avviene attraverso vari parametri, il primo in assoluto da considerare è l'orario e data di checkin, che quella più vicina deve ovviamente essere messa prima in sequenza. Se però c'è un appartamento che ha small_equipment impostato a true, quello dev'essere il primo appartamento da fare del pacchetto (a meno che non abbia un orario di checkin molto più avanti rispetto ad appartamenti senza dotazione piccola ma con orari di checkin che arrivano prima). Infine per scegliere la sequenza da fare si possono tenere in considerazione anche i percorsi che il cleaner a piedi deve percorrere. Per facilitare questa suddivisione, si potrebbero suddividere gli appartamenti da pulire in tre fasce diverse:
Fascia prioritaria, che sono i primi appartamenti della giornata che vanno puliti con più urgenza, ovvero quelli con checkin presto (alle 14) e/o con dotazione piccola true, gli appartamenti di fascia secondaria son quelli con il checkin più tardi (alle 15 e 16) e infine quelli di fascia terziaria che hanno checkin più tardi o in giorni successivi a quello di domani o che non hanno alcun checkin impostato (null).
Una volta riordinati gli appartamenti nella sequenza da fare all'interno dei pacchetti di appartamenti si passa alla TERZA FASE.
In questa fase si hanno già i pacchetti di appartamenti da fare in giornata DEFINITIVI e l'unica cosa da fare è quella di assegnarli ai cleaner. Avendo la lista di cleaner da utilizzare, in questa fase si vanno ad assegnare ad ognuno il proprio pacchetto di appartamenti, ovviamente pacchetti premium ai cleaner di tipo premium e standard a quelli di tipo standard. Le considerazioni che devi fare per scegliere a chi dare quale pacchetto dovrebbero essere basate sulle ore che ha fatto il cleaner nel mese confrontandole con le ore minime di contratto e magari dando anche gli appartamenti più grandi da pulire ai cleaner con ranking più alto. Una volta che hai assegnato a ogni cleaner il proprio pacchetto di appartamenti, mi deve stampare in un JSON la lista del cleaner col nome e cognome, le ore che in teoria dovrebbe impiegare a fare tutti gli appartamenti + il tempo di spostamento  calcolato con gmaps e appunto tutti gli appartamenti che gli sono stati assegnati nel pacchetto. Solitamente un pacchetto di appartamenti da fare dovrebbe contenere intorno ai 3/4 appartamenti, ma questa cosa può cambiare anche in base a quanto tempo ci si impiega a fare gli appartamenti e il tempo di spostamento richiesto.
In allegato ti invio la mia funzione gmaps, il file con le due strutture di esempio di cleaner e appartamenti e anche il codice che avevo già iniziato a fare anche se va rifatto da zero mantenendo l'ordine delle tre fasi che ti ho chiesto, ma magari può esserti utile per riciclare alcune parti del codice che servono.
Mi piacerebbe anche se mi aggiungessi diversi log per farmi capire ogni volta a che punto di esecuzione è l'algoritmo.